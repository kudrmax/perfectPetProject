// Package http_model provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package http_model

import (
	"time"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// RegisterRequest defines model for RegisterRequest.
type RegisterRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
	Username string `json:"username"`
}

// Tweet defines model for Tweet.
type Tweet struct {
	CreatedAt time.Time `json:"createdAt"`
	Id        int       `json:"id"`
	Text      string    `json:"text"`
}

// TweetCreate defines model for TweetCreate.
type TweetCreate struct {
	Text string `json:"text"`
}

// AuthResponse defines model for AuthResponse.
type AuthResponse struct {
	AccessToken string `json:"accessToken"`
}

// BadRequest defines model for BadRequest.
type BadRequest struct {
	Error string `json:"error"`
}

// InternalError defines model for InternalError.
type InternalError struct {
	Error string `json:"error"`
}

// NotFoundError defines model for NotFoundError.
type NotFoundError struct {
	Error string `json:"error"`
}

// LoginUserJSONRequestBody defines body for LoginUser for application/json ContentType.
type LoginUserJSONRequestBody = LoginRequest

// RegisterUserJSONRequestBody defines body for RegisterUser for application/json ContentType.
type RegisterUserJSONRequestBody = RegisterRequest

// CreateTweetJSONRequestBody defines body for CreateTweet for application/json ContentType.
type CreateTweetJSONRequestBody = TweetCreate

type AuthResponseJSONResponse struct {
	AccessToken string `json:"accessToken"`
}

type BadRequestJSONResponse struct {
	Error string `json:"error"`
}

type InternalErrorJSONResponse struct {
	Error string `json:"error"`
}

type NotFoundErrorJSONResponse struct {
	Error string `json:"error"`
}

type UnauthorizedResponse struct {
}
